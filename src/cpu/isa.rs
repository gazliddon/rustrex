// macro_rules! one_op {

//     ($this:ident, $addr_mode:ident, $op:ident) => {
//         {let v =  $this.$addr_mode(); $this.op(v)},
//     }
// }

// macro_rules! decode_op_test {
//     ($op:expr, $this:ident) => {
//         match $op {
//             0x10ce=>  { let v = $this.immediate16();  $this.lds(v) },
//             _ => {$this.unimplemented()}
//         }
//     }
// }

macro_rules! single_op {
    ($addr:ident, $op:ident, $this:ident, $mem:expr, $res:expr) => {
        { $this.$addr($mem, $res); $this.$op($mem, $res); }
    }
}

macro_rules! decode_op {
    ($op:expr, $this:ident, $mem:expr, $res:expr) => {
        match $op {
            0x00 =>  single_op!(direct_8, neg, $this, $mem, $res),
            0x03 =>  single_op!(direct_8, com, $this, $mem, $res),
            0x04 =>  single_op!(direct_8, lsr, $this, $mem, $res),
            0x06 =>  single_op!(direct_8, ror, $this, $mem, $res),
            0x07 =>  single_op!(direct_8, asr, $this, $mem, $res),
            0x08 =>  single_op!(direct_8, lsl_asl, $this, $mem, $res),
            0x09 =>  single_op!(direct_8, rol, $this, $mem, $res),
            0x0a =>  single_op!(direct_8, dec, $this, $mem, $res),
            0x0c =>  single_op!(direct_8, inc, $this, $mem, $res),
            0x0d =>  single_op!(direct_8, tst, $this, $mem, $res),
            0x0e =>  single_op!(direct_16, jmp, $this, $mem, $res),
            0x0f =>  single_op!(direct_8, clr, $this, $mem, $res),
            0x12 =>  single_op!(inherent, nop, $this, $mem, $res),
            0x13 =>  single_op!(inherent, sync, $this, $mem, $res),
            0x16 =>  single_op!(relative16, lbra, $this, $mem, $res),
            0x17 =>  single_op!(relative16, lbsr, $this, $mem, $res),
            0x19 =>  single_op!(inherent, daa, $this, $mem, $res),
            0x1a =>  single_op!(immediate8, orcc, $this, $mem, $res),
            0x1c =>  single_op!(immediate8, andcc, $this, $mem, $res),
            0x1d =>  single_op!(inherent, sex, $this, $mem, $res),
            0x1e =>  single_op!(inherent_reg_reg, exg, $this, $mem, $res),
            0x1f =>  single_op!(inherent_reg_reg, tfr, $this, $mem, $res),
            0x20 =>  single_op!(relative8, bra, $this, $mem, $res),
            0x21 =>  single_op!(relative8, brn, $this, $mem, $res),
            0x22 =>  single_op!(relative8, bhi, $this, $mem, $res),
            0x23 =>  single_op!(relative8, bls, $this, $mem, $res),
            0x24 =>  single_op!(relative8, bhs_bcc, $this, $mem, $res),
            0x25 =>  single_op!(relative8, blo_bcs, $this, $mem, $res),
            0x26 =>  single_op!(relative8, bne, $this, $mem, $res),
            0x27 =>  single_op!(relative8, beq, $this, $mem, $res),
            0x28 =>  single_op!(relative8, bvc, $this, $mem, $res),
            0x29 =>  single_op!(relative8, bvs, $this, $mem, $res),
            0x2a =>  single_op!(relative8, bpl, $this, $mem, $res),
            0x2b =>  single_op!(relative8, bmi, $this, $mem, $res),
            0x2c =>  single_op!(relative8, bge, $this, $mem, $res),
            0x2d =>  single_op!(relative8, blt, $this, $mem, $res),
            0x2e =>  single_op!(relative8, bgt, $this, $mem, $res),
            0x2f =>  single_op!(relative8, ble, $this, $mem, $res),
            0x30 =>  single_op!(indexed, leax, $this, $mem, $res),
            0x31 =>  single_op!(indexed, leay, $this, $mem, $res),
            0x32 =>  single_op!(indexed, leas, $this, $mem, $res),
            0x33 =>  single_op!(indexed, leau, $this, $mem, $res),
            0x34 =>  single_op!(inherent_reg_stack, pshs, $this, $mem, $res),
            0x35 =>  single_op!(inherent_reg_stack, puls, $this, $mem, $res),
            0x36 =>  single_op!(inherent_reg_stack, pshu, $this, $mem, $res),
            0x37 =>  single_op!(inherent_reg_stack, pulu, $this, $mem, $res),
            0x39 =>  single_op!(inherent, rts, $this, $mem, $res),
            0x3a =>  single_op!(inherent, abx, $this, $mem, $res),
            0x3b =>  single_op!(inherent, rti, $this, $mem, $res),
            0x3c =>  single_op!(inherent_reg_stack, cwai, $this, $mem, $res),
            0x3d =>  single_op!(inherent, mul, $this, $mem, $res),
            0x3e =>  single_op!(inherent, reset, $this, $mem, $res),
            0x3f =>  single_op!(inherent, swi, $this, $mem, $res),
            0x40 =>  single_op!(inherent, nega, $this, $mem, $res),
            0x43 =>  single_op!(inherent, coma, $this, $mem, $res),
            0x44 =>  single_op!(inherent, lsra, $this, $mem, $res),
            0x46 =>  single_op!(inherent, rora, $this, $mem, $res),
            0x47 =>  single_op!(inherent, asra, $this, $mem, $res),
            0x48 =>  single_op!(inherent, lsla_asla, $this, $mem, $res),
            0x49 =>  single_op!(inherent, rola, $this, $mem, $res),
            0x4a =>  single_op!(inherent, deca, $this, $mem, $res),
            0x4c =>  single_op!(inherent, inca, $this, $mem, $res),
            0x4d =>  single_op!(inherent, tsta, $this, $mem, $res),
            0x4f =>  single_op!(inherent, clra, $this, $mem, $res),
            0x50 =>  single_op!(inherent, negb, $this, $mem, $res),
            0x53 =>  single_op!(inherent, comb, $this, $mem, $res),
            0x54 =>  single_op!(inherent, lsrb, $this, $mem, $res),
            0x56 =>  single_op!(inherent, rorb, $this, $mem, $res),
            0x57 =>  single_op!(inherent, asrb, $this, $mem, $res),
            0x58 =>  single_op!(inherent, lslb_aslb, $this, $mem, $res),
            0x59 =>  single_op!(inherent, rolb, $this, $mem, $res),
            0x5a =>  single_op!(inherent, decb, $this, $mem, $res),
            0x5c =>  single_op!(inherent, incb, $this, $mem, $res),
            0x5d =>  single_op!(inherent, tstb, $this, $mem, $res),
            0x5f =>  single_op!(inherent, clrb, $this, $mem, $res),
            0x60 =>  single_op!(indexed, neg, $this, $mem, $res),
            0x63 =>  single_op!(indexed, com, $this, $mem, $res),
            0x64 =>  single_op!(indexed, lsr, $this, $mem, $res),
            0x66 =>  single_op!(indexed, ror, $this, $mem, $res),
            0x67 =>  single_op!(indexed, asr, $this, $mem, $res),
            0x68 =>  single_op!(indexed, lsl_asl, $this, $mem, $res),
            0x69 =>  single_op!(indexed, rol, $this, $mem, $res),
            0x6a =>  single_op!(indexed, dec, $this, $mem, $res),
            0x6c =>  single_op!(indexed, inc, $this, $mem, $res),
            0x6d =>  single_op!(indexed, tst, $this, $mem, $res),
            0x6e =>  single_op!(indexed, jmp, $this, $mem, $res),
            0x6f =>  single_op!(indexed, clr, $this, $mem, $res),
            0x70 =>  single_op!(extended_8, neg, $this, $mem, $res),
            0x73 =>  single_op!(extended_8, com, $this, $mem, $res),
            0x74 =>  single_op!(extended_8, lsr, $this, $mem, $res),
            0x76 =>  single_op!(extended_8, ror, $this, $mem, $res),
            0x77 =>  single_op!(extended_8, asr, $this, $mem, $res),
            0x78 =>  single_op!(extended_8, lsl_asl, $this, $mem, $res),
            0x79 =>  single_op!(extended_8, rol, $this, $mem, $res),
            0x7a =>  single_op!(extended_8, dec, $this, $mem, $res),
            0x7c =>  single_op!(extended_8, inc, $this, $mem, $res),
            0x7d =>  single_op!(extended_8, tst, $this, $mem, $res),
            0x7e =>  single_op!(extended_16, jmp, $this, $mem, $res),
            0x7f =>  single_op!(extended_8, clr, $this, $mem, $res),
            0x80 =>  single_op!(immediate8, suba, $this, $mem, $res),
            0x81 =>  single_op!(immediate8, cmpa, $this, $mem, $res),
            0x82 =>  single_op!(immediate8, sbca, $this, $mem, $res),
            0x83 =>  single_op!(immediate16, subd, $this, $mem, $res),
            0x84 =>  single_op!(immediate8, anda, $this, $mem, $res),
            0x85 =>  single_op!(immediate8, bita, $this, $mem, $res),
            0x86 =>  single_op!(immediate8, lda, $this, $mem, $res),
            0x88 =>  single_op!(immediate8, eora, $this, $mem, $res),
            0x89 =>  single_op!(immediate8, adca, $this, $mem, $res),
            0x8a =>  single_op!(immediate8, ora, $this, $mem, $res),
            0x8b =>  single_op!(immediate8, adda, $this, $mem, $res),
            0x8c =>  single_op!(immediate16, cmpx, $this, $mem, $res),
            0x8d =>  single_op!(relative8, bsr, $this, $mem, $res),
            0x8e =>  single_op!(immediate16, ldx, $this, $mem, $res),
            0x90 =>  single_op!(direct_8, suba, $this, $mem, $res),
            0x91 =>  single_op!(direct_8, cmpa, $this, $mem, $res),
            0x92 =>  single_op!(direct_8, sbca, $this, $mem, $res),
            0x93 =>  single_op!(direct_16, subd, $this, $mem, $res),
            0x94 =>  single_op!(direct_8, anda, $this, $mem, $res),
            0x95 =>  single_op!(direct_8, bita, $this, $mem, $res),
            0x96 =>  single_op!(direct_8, lda, $this, $mem, $res),
            0x97 =>  single_op!(direct_8, sta, $this, $mem, $res),
            0x98 =>  single_op!(direct_8, eora, $this, $mem, $res),
            0x99 =>  single_op!(direct_8, adca, $this, $mem, $res),
            0x9a =>  single_op!(direct_8, ora, $this, $mem, $res),
            0x9b =>  single_op!(direct_8, adda, $this, $mem, $res),
            0x9c =>  single_op!(direct_16, cmpx, $this, $mem, $res),
            0x9d =>  single_op!(direct_16, jsr, $this, $mem, $res),
            0x9e =>  single_op!(direct_16, ldx, $this, $mem, $res),
            0x9f =>  single_op!(direct_16, stx, $this, $mem, $res),
            0xa0 =>  single_op!(indexed, suba, $this, $mem, $res),
            0xa1 =>  single_op!(indexed, cmpa, $this, $mem, $res),
            0xa2 =>  single_op!(indexed, sbca, $this, $mem, $res),
            0xa3 =>  single_op!(indexed, subd, $this, $mem, $res),
            0xa4 =>  single_op!(indexed, anda, $this, $mem, $res),
            0xa5 =>  single_op!(indexed, bita, $this, $mem, $res),
            0xa6 =>  single_op!(indexed, lda, $this, $mem, $res),
            0xa7 =>  single_op!(indexed, sta, $this, $mem, $res),
            0xa8 =>  single_op!(indexed, eora, $this, $mem, $res),
            0xa9 =>  single_op!(indexed, adca, $this, $mem, $res),
            0xaa =>  single_op!(indexed, ora, $this, $mem, $res),
            0xab =>  single_op!(indexed, adda, $this, $mem, $res),
            0xac =>  single_op!(indexed, cmpx, $this, $mem, $res),
            0xad =>  single_op!(indexed, jsr, $this, $mem, $res),
            0xae =>  single_op!(indexed, ldx, $this, $mem, $res),
            0xaf =>  single_op!(indexed, stx, $this, $mem, $res),
            0xb0 =>  single_op!(extended_8, suba, $this, $mem, $res),
            0xb1 =>  single_op!(extended_8, cmpa, $this, $mem, $res),
            0xb2 =>  single_op!(extended_8, sbca, $this, $mem, $res),
            0xb3 =>  single_op!(extended_16, subd, $this, $mem, $res),
            0xb4 =>  single_op!(extended_8, anda, $this, $mem, $res),
            0xb5 =>  single_op!(extended_8, bita, $this, $mem, $res),
            0xb6 =>  single_op!(extended_8, lda, $this, $mem, $res),
            0xb7 =>  single_op!(extended_8, sta, $this, $mem, $res),
            0xb8 =>  single_op!(extended_8, eora, $this, $mem, $res),
            0xb9 =>  single_op!(extended_8, adca, $this, $mem, $res),
            0xba =>  single_op!(extended_8, ora, $this, $mem, $res),
            0xbb =>  single_op!(extended_8, adda, $this, $mem, $res),
            0xbc =>  single_op!(extended_16, cmpx, $this, $mem, $res),
            0xbd =>  single_op!(extended_16, jsr, $this, $mem, $res),
            0xbe =>  single_op!(extended_16, ldx, $this, $mem, $res),
            0xbf =>  single_op!(extended_16, stx, $this, $mem, $res),
            0xc0 =>  single_op!(immediate8, subb, $this, $mem, $res),
            0xc1 =>  single_op!(immediate8, cmpb, $this, $mem, $res),
            0xc2 =>  single_op!(immediate8, sbcb, $this, $mem, $res),
            0xc3 =>  single_op!(immediate16, addd, $this, $mem, $res),
            0xc4 =>  single_op!(immediate8, andb, $this, $mem, $res),
            0xc5 =>  single_op!(immediate8, bitb, $this, $mem, $res),
            0xc6 =>  single_op!(immediate8, ldb, $this, $mem, $res),
            0xc8 =>  single_op!(immediate8, eorb, $this, $mem, $res),
            0xc9 =>  single_op!(immediate8, adcb, $this, $mem, $res),
            0xca =>  single_op!(immediate8, orb, $this, $mem, $res),
            0xcb =>  single_op!(immediate8, addb, $this, $mem, $res),
            0xcc =>  single_op!(immediate16, ldd, $this, $mem, $res),
            0xce =>  single_op!(immediate16, ldu, $this, $mem, $res),
            0xd0 =>  single_op!(direct_8, subb, $this, $mem, $res),
            0xd1 =>  single_op!(direct_8, cmpb, $this, $mem, $res),
            0xd2 =>  single_op!(direct_8, sbcb, $this, $mem, $res),
            0xd3 =>  single_op!(direct_16, addd, $this, $mem, $res),
            0xd4 =>  single_op!(direct_8, andb, $this, $mem, $res),
            0xd5 =>  single_op!(direct_8, bitb, $this, $mem, $res),
            0xd6 =>  single_op!(direct_8, ldb, $this, $mem, $res),
            0xd7 =>  single_op!(direct_8, stb, $this, $mem, $res),
            0xd8 =>  single_op!(direct_8, eorb, $this, $mem, $res),
            0xd9 =>  single_op!(direct_8, adcb, $this, $mem, $res),
            0xda =>  single_op!(direct_8, orb, $this, $mem, $res),
            0xdb =>  single_op!(direct_8, addb, $this, $mem, $res),
            0xdc =>  single_op!(direct_16, ldd, $this, $mem, $res),
            0xdd =>  single_op!(direct_16, std, $this, $mem, $res),
            0xde =>  single_op!(direct_16, ldu, $this, $mem, $res),
            0xdf =>  single_op!(direct_16, stu, $this, $mem, $res),
            0xe0 =>  single_op!(indexed, subb, $this, $mem, $res),
            0xe1 =>  single_op!(indexed, cmpb, $this, $mem, $res),
            0xe2 =>  single_op!(indexed, sbcb, $this, $mem, $res),
            0xe3 =>  single_op!(indexed, addd, $this, $mem, $res),
            0xe4 =>  single_op!(indexed, andb, $this, $mem, $res),
            0xe5 =>  single_op!(indexed, bitb, $this, $mem, $res),
            0xe6 =>  single_op!(indexed, ldb, $this, $mem, $res),
            0xe7 =>  single_op!(indexed, stb, $this, $mem, $res),
            0xe8 =>  single_op!(indexed, eorb, $this, $mem, $res),
            0xe9 =>  single_op!(indexed, adcb, $this, $mem, $res),
            0xea =>  single_op!(indexed, orb, $this, $mem, $res),
            0xeb =>  single_op!(indexed, addb, $this, $mem, $res),
            0xec =>  single_op!(indexed, ldd, $this, $mem, $res),
            0xed =>  single_op!(indexed, std, $this, $mem, $res),
            0xee =>  single_op!(indexed, ldu, $this, $mem, $res),
            0xef =>  single_op!(indexed, stu, $this, $mem, $res),
            0xf0 =>  single_op!(extended_8, subb, $this, $mem, $res),
            0xf1 =>  single_op!(extended_8, cmpb, $this, $mem, $res),
            0xf2 =>  single_op!(extended_8, sbcb, $this, $mem, $res),
            0xf3 =>  single_op!(extended_16, addd, $this, $mem, $res),
            0xf4 =>  single_op!(extended_8, andb, $this, $mem, $res),
            0xf5 =>  single_op!(extended_8, bitb, $this, $mem, $res),
            0xf6 =>  single_op!(extended_8, ldb, $this, $mem, $res),
            0xf7 =>  single_op!(extended_8, stb, $this, $mem, $res),
            0xf8 =>  single_op!(extended_8, eorb, $this, $mem, $res),
            0xf9 =>  single_op!(extended_8, adcb, $this, $mem, $res),
            0xfa =>  single_op!(extended_8, orb, $this, $mem, $res),
            0xfb =>  single_op!(extended_8, addb, $this, $mem, $res),
            0xfc =>  single_op!(extended_16, ldd, $this, $mem, $res),
            0xfd =>  single_op!(extended_16, std, $this, $mem, $res),
            0xfe =>  single_op!(extended_16, ldu, $this, $mem, $res),
            0xff =>  single_op!(extended_16, stu, $this, $mem, $res),
            0x113f => single_op!(inherent,  swi3, $this, $mem, $res),
            0x1183 => single_op!(immediate16,  cmpu, $this, $mem, $res),
            0x118c => single_op!(immediate16,  cmps, $this, $mem, $res),
            0x1193 => single_op!(direct_16, cmpu, $this, $mem, $res),
            0x119c => single_op!(direct_16, cmps, $this, $mem, $res),
            0x11a3 => single_op!(indexed, cmpu, $this, $mem, $res),
            0x11ac => single_op!(indexed, cmps, $this, $mem, $res),
            0x11b3 => single_op!(extended_16, cmpu, $this, $mem, $res),
            0x11bc => single_op!(extended_16, cmps, $this, $mem, $res),
            0x1021 => single_op!(relative16, lbrn, $this, $mem, $res),
            0x1022 =>  single_op!(relative16, lbhi, $this, $mem, $res),
            0x1023 =>  single_op!(relative16, lbls, $this, $mem, $res),
            0x1024 =>  single_op!(relative16, lbhs_lbcc, $this, $mem, $res),
            0x1025 =>  single_op!(relative16, lblo_lbcs, $this, $mem, $res),
            0x1026 =>  single_op!(relative16, lbne, $this, $mem, $res),
            0x1027 =>  single_op!(relative16, lbeq, $this, $mem, $res),
            0x1028 =>  single_op!(relative16, lbvc, $this, $mem, $res),
            0x1029 =>  single_op!(relative16, lbvs, $this, $mem, $res),
            0x102a =>  single_op!(relative16, lbpl, $this, $mem, $res),
            0x102b =>  single_op!(relative16, lbmi, $this, $mem, $res),
            0x102c =>  single_op!(relative16, lbge, $this, $mem, $res),
            0x102d =>  single_op!(relative16, lblt, $this, $mem, $res),
            0x102e =>  single_op!(relative16, lbgt, $this, $mem, $res),
            0x102f =>  single_op!(relative16, lble, $this, $mem, $res),
            0x103f =>  single_op!(inherent, swi2, $this, $mem, $res),
            0x1083 =>  single_op!(immediate16, cmpd, $this, $mem, $res),
            0x108c =>  single_op!(immediate16, cmpy, $this, $mem, $res),
            0x108e =>  single_op!(immediate16, ldy, $this, $mem, $res),
            0x1093 =>  single_op!(direct_16, cmpd, $this, $mem, $res),
            0x109c =>  single_op!(direct_16, cmpy, $this, $mem, $res),
            0x109e =>  single_op!(direct_16, ldy, $this, $mem, $res),
            0x109f =>  single_op!(direct_16, sty, $this, $mem, $res),
            0x10a3 =>  single_op!(indexed, cmpd, $this, $mem, $res),
            0x10ac =>  single_op!(indexed, cmpy, $this, $mem, $res),
            0x10ae =>  single_op!(indexed, ldy, $this, $mem, $res),
            0x10af =>  single_op!(indexed, sty, $this, $mem, $res),
            0x10b3 =>  single_op!(extended_16, cmpd, $this, $mem, $res),
            0x10bc =>  single_op!(extended_16, cmpy, $this, $mem, $res),
            0x10be =>  single_op!(extended_16, ldy, $this, $mem, $res),
            0x10bf =>  single_op!(extended_16, sty, $this, $mem, $res),
            0x10ce =>  single_op!(immediate16, lds, $this, $mem, $res),
            0x10de =>  single_op!(direct_16, lds, $this, $mem, $res),
            0x10df =>  single_op!(direct_16, sts, $this, $mem, $res),
            0x10ee =>  single_op!(indexed, lds, $this, $mem, $res),
            0x10ef =>  single_op!(indexed, sts, $this, $mem, $res),
            0x10fe =>  single_op!(extended_16, lds, $this, $mem, $res),
            0x10ff =>  single_op!(extended_16, sts, $this, $mem, $res),

            _ => { $this.unimplemented($op)}
        }
    }
}



