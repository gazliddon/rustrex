// macro_rules! one_op {

//     ($this:ident, $addr_mode:ident, $op:ident) => {
//         {let v =  $this.$addr_mode(); $this.op(v)},
//     }
// }

macro_rules! decode_op {
    ($op:expr, $this:ident) => {
        match $op {
            0x00 =>  { let v = $this.direct(); $this.neg(v)  },
            0x03 =>  { let v = $this.direct(); $this.com(v)  },
            0x04 =>  { let v = $this.direct(); $this.lsr(v)  },
            0x06 =>  { let v = $this.direct(); $this.ror(v)  },
            0x07 =>  { let v = $this.direct(); $this.asr(v)  },
            0x08 =>  { let v = $this.direct(); $this.lsl_asl(v)  },
            0x09 =>  { let v = $this.direct(); $this.rol(v)  },
            0x0a =>  { let v = $this.direct(); $this.dec(v)  },
            0x0c =>  { let v = $this.direct(); $this.inc(v)  },
            0x0d =>  { let v = $this.direct(); $this.tst(v)  },
            0x0e =>  { let v = $this.direct(); $this.jmp(v)  },
            0x0f =>  { let v = $this.direct(); $this.clr(v)  },
            0x12 =>  { let v = $this.inherent(); $this.nop(v)  },
            0x13 =>  { let v = $this.inherent(); $this.sync(v)  },
            0x16 =>  { let v = $this.relative(); $this.lbra(v)  },
            0x17 =>  { let v = $this.relative(); $this.lbsr(v)  },
            0x19 =>  { let v = $this.inherent(); $this.daa(v)  },
            0x1a =>  { let v = $this.immediate8(); $this.orcc(v)  },
            0x1c =>  { let v = $this.immediate8(); $this.andcc(v)  },
            0x1d =>  { let v = $this.inherent(); $this.sex(v)  },
            0x1e =>  { let v = $this.inherent(); $this.exg(v)  },
            0x1f =>  { let v = $this.inherent(); $this.tfr(v)  },
            0x20 =>  { let v = $this.relative(); $this.bra(v)  },
            0x21 =>  { let v = $this.relative(); $this.brn(v)  },
            0x22 =>  { let v = $this.relative(); $this.bhi(v)  },
            0x23 =>  { let v = $this.relative(); $this.bls(v)  },
            0x24 =>  { let v = $this.relative(); $this.bhs_bcc(v)  },
            0x25 =>  { let v = $this.relative(); $this.blo_bcs(v)  },
            0x26 =>  { let v = $this.relative(); $this.bne(v)  },
            0x27 =>  { let v = $this.relative(); $this.beq(v)  },
            0x28 =>  { let v = $this.relative(); $this.bvc(v)  },
            0x29 =>  { let v = $this.relative(); $this.bvs(v)  },
            0x2a =>  { let v = $this.relative(); $this.bpl(v)  },
            0x2b =>  { let v = $this.relative(); $this.bmi(v)  },
            0x2c =>  { let v = $this.relative(); $this.bge(v)  },
            0x2d =>  { let v = $this.relative(); $this.blt(v)  },
            0x2e =>  { let v = $this.relative(); $this.bgt(v)  },
            0x2f =>  { let v = $this.relative(); $this.ble(v)  },
            0x30 =>  { let v = $this.indexed(); $this.leax(v)  },
            0x31 =>  { let v = $this.indexed(); $this.leay(v)  },
            0x32 =>  { let v = $this.indexed(); $this.leas(v)  },
            0x33 =>  { let v = $this.indexed(); $this.leau(v)  },
            0x34 =>  { let v = $this.inherent(); $this.pshs(v)  },
            0x35 =>  { let v = $this.inherent(); $this.puls(v)  },
            0x36 =>  { let v = $this.inherent(); $this.pshu(v)  },
            0x37 =>  { let v = $this.inherent(); $this.pulu(v)  },
            0x39 =>  { let v = $this.inherent(); $this.rts(v)  },
            0x3a =>  { let v = $this.inherent(); $this.abx(v)  },
            0x3b =>  { let v = $this.inherent(); $this.rti(v)  },
            0x3c =>  { let v = $this.inherent(); $this.cwai(v)  },
            0x3d =>  { let v = $this.inherent(); $this.mul(v)  },
            0x3e =>  { let v = $this.inherent(); $this.reset(v)  },
            0x3f =>  { let v = $this.inherent(); $this.swi(v)  },
            0x40 =>  { let v = $this.inherent(); $this.nega(v)  },
            0x43 =>  { let v = $this.inherent(); $this.coma(v)  },
            0x44 =>  { let v = $this.inherent(); $this.lsra(v)  },
            0x46 =>  { let v = $this.inherent(); $this.rora(v)  },
            0x47 =>  { let v = $this.inherent(); $this.asra(v)  },
            0x48 =>  { let v = $this.inherent(); $this.lsla_asla(v)  },
            0x49 =>  { let v = $this.inherent(); $this.rola(v)  },
            0x4a =>  { let v = $this.inherent(); $this.deca(v)  },
            0x4c =>  { let v = $this.inherent(); $this.inca(v)  },
            0x4d =>  { let v = $this.inherent(); $this.tsta(v)  },
            0x4f =>  { let v = $this.inherent(); $this.clra(v)  },
            0x50 =>  { let v = $this.inherent(); $this.negb(v)  },
            0x53 =>  { let v = $this.inherent(); $this.comb(v)  },
            0x54 =>  { let v = $this.inherent(); $this.lsrb(v)  },
            0x56 =>  { let v = $this.inherent(); $this.rorb(v)  },
            0x57 =>  { let v = $this.inherent(); $this.asrb(v)  },
            0x58 =>  { let v = $this.inherent(); $this.lslb_aslb(v)  },
            0x59 =>  { let v = $this.inherent(); $this.rolb(v)  },
            0x5a =>  { let v = $this.inherent(); $this.decb(v)  },
            0x5c =>  { let v = $this.inherent(); $this.incb(v)  },
            0x5d =>  { let v = $this.inherent(); $this.tstb(v)  },
            0x5f =>  { let v = $this.inherent(); $this.clrb(v)  },
            0x60 =>  { let v = $this.indexed(); $this.neg(v)  },
            0x63 =>  { let v = $this.indexed(); $this.com(v)  },
            0x64 =>  { let v = $this.indexed(); $this.lsr(v)  },
            0x66 =>  { let v = $this.indexed(); $this.ror(v)  },
            0x67 =>  { let v = $this.indexed(); $this.asr(v)  },
            0x68 =>  { let v = $this.indexed(); $this.lsl_asl(v)  },
            0x69 =>  { let v = $this.indexed(); $this.rol(v)  },
            0x6a =>  { let v = $this.indexed(); $this.dec(v)  },
            0x6c =>  { let v = $this.indexed(); $this.inc(v)  },
            0x6d =>  { let v = $this.indexed(); $this.tst(v)  },
            0x6e =>  { let v = $this.indexed(); $this.jmp(v)  },
            0x6f =>  { let v = $this.indexed(); $this.clr(v)  },
            0x70 =>  { let v = $this.extended(); $this.neg(v)  },
            0x73 =>  { let v = $this.extended(); $this.com(v)  },
            0x74 =>  { let v = $this.extended(); $this.lsr(v)  },
            0x76 =>  { let v = $this.extended(); $this.ror(v)  },
            0x77 =>  { let v = $this.extended(); $this.asr(v)  },
            0x78 =>  { let v = $this.extended(); $this.lsl_asl(v)  },
            0x79 =>  { let v = $this.extended(); $this.rol(v)  },
            0x7a =>  { let v = $this.extended(); $this.dec(v)  },
            0x7c =>  { let v = $this.extended(); $this.inc(v)  },
            0x7d =>  { let v = $this.extended(); $this.tst(v)  },
            0x7e =>  { let v = $this.extended(); $this.jmp(v)  },
            0x7f =>  { let v = $this.extended(); $this.clr(v)  },
            0x80 =>  { let v = $this.immediate8(); $this.suba(v)  },
            0x81 =>  { let v = $this.immediate8(); $this.cmpa(v)  },
            0x82 =>  { let v = $this.immediate8(); $this.sbca(v)  },
            0x83 =>  { let v = $this.immediate16(); $this.subd(v)  },
            0x84 =>  { let v = $this.immediate8(); $this.anda(v)  },
            0x85 =>  { let v = $this.immediate8(); $this.bita(v)  },
            0x86 =>  { let v = $this.immediate8(); $this.lda(v)  },
            0x88 =>  { let v = $this.immediate8(); $this.eora(v)  },
            0x89 =>  { let v = $this.immediate8(); $this.adca(v)  },
            0x8a =>  { let v = $this.immediate8(); $this.ora(v)  },
            0x8b =>  { let v = $this.immediate8(); $this.adda(v)  },
            0x8c =>  { let v = $this.immediate16(); $this.cmpx(v)  },
            0x8d =>  { let v = $this.relative(); $this.bsr(v)  },
            0x8e =>  { let v = $this.immediate16(); $this.ldx(v)  },
            0x90 =>  { let v = $this.direct(); $this.suba(v)  },
            0x91 =>  { let v = $this.direct(); $this.cmpa(v)  },
            0x92 =>  { let v = $this.direct(); $this.sbca(v)  },
            0x93 =>  { let v = $this.direct(); $this.subd(v)  },
            0x94 =>  { let v = $this.direct(); $this.anda(v)  },
            0x95 =>  { let v = $this.direct(); $this.bita(v)  },
            0x96 =>  { let v = $this.direct(); $this.lda(v)  },
            0x97 =>  { let v = $this.direct(); $this.sta(v)  },
            0x98 =>  { let v = $this.direct(); $this.eora(v)  },
            0x99 =>  { let v = $this.direct(); $this.adca(v)  },
            0x9a =>  { let v = $this.direct(); $this.ora(v)  },
            0x9b =>  { let v = $this.direct(); $this.adda(v)  },
            0x9c =>  { let v = $this.direct(); $this.cmpx(v)  },
            0x9d =>  { let v = $this.direct(); $this.jsr(v)  },
            0x9e =>  { let v = $this.direct(); $this.ldx(v)  },
            0x9f =>  { let v = $this.direct(); $this.stx(v)  },
            0xa0 =>  { let v = $this.indexed(); $this.suba(v)  },
            0xa1 =>  { let v = $this.indexed(); $this.cmpa(v)  },
            0xa2 =>  { let v = $this.indexed(); $this.sbca(v)  },
            0xa3 =>  { let v = $this.indexed(); $this.subd(v)  },
            0xa4 =>  { let v = $this.indexed(); $this.anda(v)  },
            0xa5 =>  { let v = $this.indexed(); $this.bita(v)  },
            0xa6 =>  { let v = $this.indexed(); $this.lda(v)  },
            0xa7 =>  { let v = $this.indexed(); $this.sta(v)  },
            0xa8 =>  { let v = $this.indexed(); $this.eora(v)  },
            0xa9 =>  { let v = $this.indexed(); $this.adca(v)  },
            0xaa =>  { let v = $this.indexed(); $this.ora(v)  },
            0xab =>  { let v = $this.indexed(); $this.adda(v)  },
            0xac =>  { let v = $this.indexed(); $this.cmpx(v)  },
            0xad =>  { let v = $this.indexed(); $this.jsr(v)  },
            0xae =>  { let v = $this.indexed(); $this.ldx(v)  },
            0xaf =>  { let v = $this.indexed(); $this.stx(v)  },
            0xb0 =>  { let v = $this.extended(); $this.suba(v)  },
            0xb1 =>  { let v = $this.extended(); $this.cmpa(v)  },
            0xb2 =>  { let v = $this.extended(); $this.sbca(v)  },
            0xb3 =>  { let v = $this.extended(); $this.subd(v)  },
            0xb4 =>  { let v = $this.extended(); $this.anda(v)  },
            0xb5 =>  { let v = $this.extended(); $this.bita(v)  },
            0xb6 =>  { let v = $this.extended(); $this.lda(v)  },
            0xb7 =>  { let v = $this.extended(); $this.sta(v)  },
            0xb8 =>  { let v = $this.extended(); $this.eora(v)  },
            0xb9 =>  { let v = $this.extended(); $this.adca(v)  },
            0xba =>  { let v = $this.extended(); $this.ora(v)  },
            0xbb =>  { let v = $this.extended(); $this.adda(v)  },
            0xbc =>  { let v = $this.extended(); $this.cmpx(v)  },
            0xbd =>  { let v = $this.extended(); $this.jsr(v)  },
            0xbe =>  { let v = $this.extended(); $this.ldx(v)  },
            0xbf =>  { let v = $this.extended(); $this.stx(v)  },
            0xc0 =>  { let v = $this.immediate8(); $this.subb(v)  },
            0xc1 =>  { let v = $this.immediate8(); $this.cmpb(v)  },
            0xc2 =>  { let v = $this.immediate8(); $this.sbcb(v)  },
            0xc3 =>  { let v = $this.immediate16(); $this.addd(v)  },
            0xc4 =>  { let v = $this.immediate8(); $this.andb(v)  },
            0xc5 =>  { let v = $this.immediate8(); $this.bitb(v)  },
            0xc6 =>  { let v = $this.immediate8(); $this.ldb(v)  },
            0xc8 =>  { let v = $this.immediate8(); $this.eorb(v)  },
            0xc9 =>  { let v = $this.immediate8(); $this.adcb(v)  },
            0xca =>  { let v = $this.immediate8(); $this.orb(v)  },
            0xcb =>  { let v = $this.immediate8(); $this.addb(v)  },
            0xcc =>  { let v = $this.immediate16(); $this.ldd(v)  },
            0xce =>  { let v = $this.immediate16(); $this.ldu(v)  },
            0xd0 =>  { let v = $this.direct(); $this.subb(v)  },
            0xd1 =>  { let v = $this.direct(); $this.cmpb(v)  },
            0xd2 =>  { let v = $this.direct(); $this.sbcb(v)  },
            0xd3 =>  { let v = $this.direct(); $this.addd(v)  },
            0xd4 =>  { let v = $this.direct(); $this.andb(v)  },
            0xd5 =>  { let v = $this.direct(); $this.bitb(v)  },
            0xd6 =>  { let v = $this.direct(); $this.ldb(v)  },
            0xd7 =>  { let v = $this.direct(); $this.stb(v)  },
            0xd8 =>  { let v = $this.direct(); $this.eorb(v)  },
            0xd9 =>  { let v = $this.direct(); $this.adcb(v)  },
            0xda =>  { let v = $this.direct(); $this.orb(v)  },
            0xdb =>  { let v = $this.direct(); $this.addb(v)  },
            0xdc =>  { let v = $this.direct(); $this.ldd(v)  },
            0xdd =>  { let v = $this.direct(); $this.std(v)  },
            0xde =>  { let v = $this.direct(); $this.ldu(v)  },
            0xdf =>  { let v = $this.direct(); $this.stu(v)  },
            0xe0 =>  { let v = $this.indexed(); $this.subb(v)  },
            0xe1 =>  { let v = $this.indexed(); $this.cmpb(v)  },
            0xe2 =>  { let v = $this.indexed(); $this.sbcb(v)  },
            0xe3 =>  { let v = $this.indexed(); $this.addd(v)  },
            0xe4 =>  { let v = $this.indexed(); $this.andb(v)  },
            0xe5 =>  { let v = $this.indexed(); $this.bitb(v)  },
            0xe6 =>  { let v = $this.indexed(); $this.ldb(v)  },
            0xe7 =>  { let v = $this.indexed(); $this.stb(v)  },
            0xe8 =>  { let v = $this.indexed(); $this.eorb(v)  },
            0xe9 =>  { let v = $this.indexed(); $this.adcb(v)  },
            0xea =>  { let v = $this.indexed(); $this.orb(v)  },
            0xeb =>  { let v = $this.indexed(); $this.addb(v)  },
            0xec =>  { let v = $this.indexed(); $this.ldd(v)  },
            0xed =>  { let v = $this.indexed(); $this.std(v)  },
            0xee =>  { let v = $this.indexed(); $this.ldu(v)  },
            0xef =>  { let v = $this.indexed(); $this.stu(v)  },
            0xf0 =>  { let v = $this.extended(); $this.subb(v)  },
            0xf1 =>  { let v = $this.extended(); $this.cmpb(v)  },
            0xf2 =>  { let v = $this.extended(); $this.sbcb(v)  },
            0xf3 =>  { let v = $this.extended(); $this.addd(v)  },
            0xf4 =>  { let v = $this.extended(); $this.andb(v)  },
            0xf5 =>  { let v = $this.extended(); $this.bitb(v)  },
            0xf6 =>  { let v = $this.extended(); $this.ldb(v)  },
            0xf7 =>  { let v = $this.extended(); $this.stb(v)  },
            0xf8 =>  { let v = $this.extended(); $this.eorb(v)  },
            0xf9 =>  { let v = $this.extended(); $this.adcb(v)  },
            0xfa =>  { let v = $this.extended(); $this.orb(v)  },
            0xfb =>  { let v = $this.extended(); $this.addb(v)  },
            0xfc =>  { let v = $this.extended(); $this.ldd(v)  },
            0xfd =>  { let v = $this.extended(); $this.std(v)  },
            0xfe =>  { let v = $this.extended(); $this.ldu(v)  },
            0xff =>  { let v = $this.extended(); $this.stu(v)  },

            0x113f => { let v = $this.inherent();  $this.swi3(v)  },
            0x1183 => { let v = $this.immediate16();  $this.cmpu(v)  },
            0x118c => { let v = $this.immediate16();  $this.cmps(v)  },
            0x1193 => { let v = $this.direct();  $this.cmpu(v)  },
            0x119c => { let v = $this.direct();  $this.cmps(v)  },
            0x11a3 => { let v = $this.indexed();  $this.cmpu(v)  },
            0x11ac => { let v = $this.indexed();  $this.cmps(v)  },
            0x11b3 => { let v = $this.extended();  $this.cmpu(v)  },
            0x11bc => { let v = $this.extended();  $this.cmps(v)  },
            0x1021=> { let v = $this.relative();  $this.lbrn(v) },
            0x1022=>  { let v = $this.relative();  $this.lbhi(v) },
            0x1023=>  { let v = $this.relative();  $this.lbls(v) },
            0x1024=>  { let v = $this.relative();  $this.lbhs_lbcc(v)  },
            0x1025=>  { let v = $this.relative();  $this.lblo_lbcs(v)  },
            0x1026=>  { let v = $this.relative();  $this.lbne(v) },
            0x1027=>  { let v = $this.relative();  $this.lbeq(v) },
            0x1028=>  { let v = $this.relative();  $this.lbvc(v) },
            0x1029=>  { let v = $this.relative();  $this.lbvs(v) },
            0x102a=>  { let v = $this.relative();  $this.lbpl(v) },
            0x102b=>  { let v = $this.relative();  $this.lbmi(v) },
            0x102c=>  { let v = $this.relative();  $this.lbge(v) },
            0x102d=>  { let v = $this.relative();  $this.lblt(v) },
            0x102e=>  { let v = $this.relative();  $this.lbgt(v) },
            0x102f=>  { let v = $this.relative();  $this.lble(v) },
            0x103f=>  { let v = $this.inherent();  $this.swi2(v) },
            0x1083=>  { let v = $this.immediate16();  $this.cmpd(v) },
            0x108c=>  { let v = $this.immediate16();  $this.cmpy(v) },
            0x108e=>  { let v = $this.immediate16();  $this.ldy(v) },
            0x1093=>  { let v = $this.direct();  $this.cmpd(v) },
            0x109c=>  { let v = $this.direct();  $this.cmpy(v) },
            0x109e=>  { let v = $this.direct();  $this.ldy(v) },
            0x109f=>  { let v = $this.direct();  $this.sty(v) },
            0x10a3=>  { let v = $this.indexed();  $this.cmpd(v) },
            0x10ac=>  { let v = $this.indexed();  $this.cmpy(v) },
            0x10ae=>  { let v = $this.indexed();  $this.ldy(v) },
            0x10af=>  { let v = $this.indexed();  $this.sty(v) },
            0x10b3=>  { let v = $this.extended();  $this.cmpd(v) },
            0x10bc=>  { let v = $this.extended();  $this.cmpy(v) },
            0x10be=>  { let v = $this.extended();  $this.ldy(v) },
            0x10bf=>  { let v = $this.extended();  $this.sty(v) },
            0x10ce=>  { let v = $this.immediate16();  $this.lds(v) },
            0x10de=>  { let v = $this.direct();  $this.lds(v) },
            0x10df=>  { let v = $this.direct();  $this.sts(v) },
            0x10ee=>  { let v = $this.indexed();  $this.lds(v) },
            0x10ef=>  { let v = $this.indexed();  $this.sts(v) },
            0x10fe=>  { let v = $this.extended();  $this.lds(v) },
            0x10ff=>  { let v = $this.extended();  $this.sts(v) },
            _ => {$this.unimplemented()}
        }
    }
}



